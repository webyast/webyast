= YaST REST Service Documentation

  Copyright Â© 2009-10 Novell, Inc.

  Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or (at your option) version 1.3; with the Invariant Section being this copyright notice and license. A copy of the license version 1.2 is included in the section entitled "GNU Free Documentation License". 

== Network

  Only authenticated users are allowed to access the API. Authentication is done
  by sending a Basic HTTP Authorisation header.

  All names aren't allowed to contain spaces, slashes or colons.

== Table of Contents

Contents

== Overview

  This module provides access to network configuration which includes network interfaces, hostname and dns settings, and routes.


== PolicyKit Access Rights

  The following PolicyKit permissions are defined:

  org.opensuse.yast.modules.yapi.network.read

  org.opensuse.yast.modules.yapi.network.write

== Interfaces

  Actually currently it operates on the interface
  <b>configurations</b> (/etc/sysconfig/network/ifcfg-*)

GET /network/interfaces

  Get the list of interfaces.

  CURL example:
  curl -u <user>:<password> -H "Accept: application/xml" http://localhost:4984/network/interfaces

XmlResult: interfaces_get

GET /network/interfaces/<id>

<id>: interface ID, as in /etc/sysconfig/network/ifcfg-ID

  Get the details of an interface.

  CURL example:
  curl -u <user>:<password> -H "Accept: application/xml" http://localhost:4984/network/interfaces/eth0

XmlResult: interfaces_eth0_get

PUT /network/interfaces/<id>

<id>: interface ID, as in /etc/sysconfig/network/ifcfg-ID

  Update an interface configuration.

  CURL example:
  curl -u <user>:<password> -X PUT -H "Accept: application/xml" -H "Content-Type: application/xml" --data @interfaces_eth0_put_request http://localhost:4984/network/interfaces/eth0

XmlBody:   interfaces_eth0_put_request
XmlResult: interfaces_eth0_put_response

POST /network/interfaces

  Create a new custom network interface, e.g vlan

  CURL example:
  curl -u <user>:<password> -X POST -H "Accept: application/xml" -H "Content-Type: application/xml" --data @interfaces_vlan0_post.xml

XmlBody:   interfaces_vlan0_post_request
XmlResult: interfaces_vlan0_post_response

DELETE /network/interfaces/vlan0

  Remove existing network interface

  CURL example:
  curl -u <user>:<password> -X DELETE -H "Accept: application/xml"

XmlResult: interfaces_vlan0_delete_response

== Hostname

GET /network/hostname

  Get the host name and domain.

XmlResult: hostname_get

PUT /network/hostname

  Set the host name and domain.

XmlBody: hostname_put_request
XmlResult: hostname_put_response

== DNS

GET /network/dns

  Get the nameservers and DNS search list.

XmlResult: dns_get

PUT /network/dns

  Set the nameservers and DNS search list.

XmlBody: dns_put_request
XmlResult: dns_put_response

== Routes

GET /network/routes

  Get the list of configured routes.

XmlResult: routes_get

GET /network/routes/<id>
<id>: route ID

  Get the details of a route.

XmlResult: routes_default_get

PUT /network/routes/<id>

<id>: route ID, currently only "default" is valid

  Update a route.

XmlBody: routes_put_request_default
XmlResult: routes_put_response_default
