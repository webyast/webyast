<!-- RORSCAN_ICF
# Copyright (c) 2009-2010 Novell, Inc.
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, contact Novell, Inc.
#
# To contact Novell about this file by physical or electronic mail,
# you may find current contact information at www.novell.com
-->
<% content_for :head do %>

  <%= stylesheet_link_tag "webyast-users" %>
  <%= javascript_include_tag "webyast-users" %>

<% if ! can? :usersget, User %>
<script>
  function members_validation(which){ return true; }
</script>
<% end %>

 <style>
    tr {
	border: solid 1px #ddd;
    }
    .qs_input {
	width: auto !important;
    }
    input.error { float: none !important }
    label.error {display: none; float:left; color: #990000; font-weight:bold; margin-left:10px;}
 </style>

 <%= render :partial => "shared/notification", :locals => { :module_name => 'groups' } %>

 <%= javascript_tag do %>
 jQuery.expr[':'].Contains = function(a, i, m) {
  return jQuery(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;
 };

  function select_users_dialog() {
    var open_dialog = select_many_dialog({
      kind : 'users',
      title : <%= jss _('Select Members') %>,
      selected_title : <%= jss _('Selected Members') %>,
      unselected_title : <%= jss _('Available Members') %>,
      tooltip : <%= jss _('Click user names to select/unselect members') %>,
      loadItems : function (dialogId) {
        var members = $('#form_'+dialogId+' .members-string')[0].value.split(",");
      	this.system_users = arrays_complement($('#form_'+dialogId+' .members-string')[0].value.split(","), $("#all_users_string")[0].value.split(","));
        return members;
      },
      storeItems : function (dialogId, items) {
        //$('#form_'+dialogId+' .members-string')[0].value = $group_members.value.join(",");
        //bnc#700904
        $group_members = $('#form_'+dialogId+' .members-string')[0]
        $group_members.value.length > 0 ? $group_members.value = this.system_users.concat(items).join(",") : $group_members.value = items
      },
      allItems : function (dialogId) {
        return $('#all_users_string')[0].value.split(",")
      }
    });
    return open_dialog;
  };

  function collect_groups_ids() {
    var ids = [];
    $(".group_gid").each(function() {
      ids.push($(this).val());
    });
    $("#groups").data("groups_ids", ids);
  }

  function collect_groups_names() {
    var names = [];
    $(".group_cn").each(function() {
    names.push($(this).val());
    });
    $("#groups").data("groups_names", names);
  }

  $.validator.addMethod("unique_cn", function(current_cn, element) {
    var original_cn_value = $('#origin_' + $(element).attr('id')).val();
    var original_cn_names = $.grep($("#groups").data('groups_names'), function(value){
      return (value != original_cn_value);
    });
    if($.inArray(current_cn, original_cn_names) > -1){
      return false
    } else { return true } }, "<%= _("Must be unique") %>"
  )

  $.validator.addMethod("unique_gid", function(current_gid, element) {
    var original_gid  = $('#origin_' + $(element).attr('id')).val();
    var original_gids = $.grep($("#groups").data('groups_ids'), function(value){
      return (value != original_gid);
    });
    if($.inArray(current_gid, original_gids) > -1){
      return false;
    } else { return true } }, "<%= _("Already exists") %>"
  )
  $(document).ready(function(){

    collect_groups_ids();
    collect_groups_names();

    select_users_open = select_users_dialog();

    $(".submit_group_form").submit(function(){
      return false;
    });


  $('input#groups_search').quicksearch('div.list-fieldset', {
          selector: 'span.quicksearch_content',
          delay: 100
  });

  $(".accordion").accordion({
     autoHeight : false,
     navigation : true,
     collapsible: true,
     header     : 'div.list-fieldset div.list-fieldset-header',
     animated   : false
  });

  $(".accordion").accordion('activate', false);


});//document.ready

<% end %>
<% end %>

<div id="groups_index" class="plugin-content plugin-border">
  <div class="plugin-header">
    <div class="left">
      <label class="plugin-icon-container"><%= image_tag("groups.png", :class=>"plugin-icon") %></label>
      <label class="plugin-name"><%=_("Groups")%></label>
      <%= render :partial => 'shared/online_help', :locals => { :help_name => "groups"} %>
    </div>
  </div>

  <div class="clearfix">&nbsp;</div>

  <div id="webyast-toolbar-container">
    <%=link_to image_tag("home.png", :class=>"home-icon"), :controller=>"controlpanel", :action => :index %>

    <form action="#" id="quicksearch">
      <label><%= _("Filter:") %></label>
      <input type="text" id="groups_search"/>
    </form>

    <span id="action_link_container">
      <% if can? :groupadd, User %>
        <%=link_to image_tag("groups.png", :class=>"action_link_icon") + _("New Group"), :action => :new %>
      <% end %>
        <%=link_to image_tag("users.png", :class=>"action_link_icon") +  _("Manage Users"), :controller => "users" %>
    </span>
  </div>

  <div style="clear:both; overflow:hidden;"></div>

  <div class='pad1_2em'>
    <div id="groups" class="accordion">
      <% disabled = cannot?(:groupmodify, User) %>
      <% for group in @groups %>
        <div class="list-fieldset">
          <div class="list-fieldset-header">
            <span class="quicksearch_content">
              <%= h group.cn || "-none-" %>
            </span>
          </div>
          <div class='group-content' style="display:none">
            <%= form_for group,
              :url       => { :action => @adding ? "create" : "update"},
              :html      => { :id => "form_"+group.old_cn, :autocomplete => :off, :onsubmit => "form_handler('#{group.old_cn}')"},
              :namespace => group.cn do |f| %>
            <%= f.hidden_field :old_cn %>
            <p>
              <div class="label"><%=_("Group Name")%></div>
              <%= f.text_field   :cn, :disabled => disabled, :class => "group_cn required unique_cn" %>
              <%= f.hidden_field :cn, :namespace=>"origin_#{group.cn}", :name=>:cn_original %>
            </p>
            <p>
              <div class="label"><%=_("Group ID")%></div>
              <%= f.text_field   :gid, :class=>'group_gid unique_gid', :disabled => disabled %>
              <%= f.hidden_field :gid, :namespace=>"origin_#{group.cn}", :name=>:gid_original %>
            </p>
            <p>
              <div class="label"><%=_("Members")%></div>
              <%= f.text_field :members_string, :disabled => disabled, :onkeyup => "members_validation(this);", :class => "members-string"%>
              <% if can? :usersget, User %>
                <a href="#" id="manage_members" class="button" onClick="select_users_open('<%= group.old_cn %>');return false;"><%= _("Manage Members") %></a>
              <% end %>
              <%= f.hidden_field :group_type %>
              <label class="error"></label>
            </p>

            <div class="nav-buttons">
              <div class="hr">&nbsp;</div>
              <div id="progress_<%= group.cn -%>" style="display: none; margin-bottom: 10px"><%= image_tag("working.gif", :class => "small-working-icon") %><span style="vertical-align: 50%; margin-left: 5px">...Wait...</span></div>
                <% message = _('Please wait')%>
                <%= submit_tag _("Save"), :class=>"submit_group_form",
                    :onclick=>"return $('#form_" + group.old_cn + "').validate({
                      submitHandler: function(form) {
                        var message = '#{message}';
                        disableFormOnSubmit(message);
                        form.submit();
                      }
                });" %>

                <% if can? :groupdelete, User %>
                  <span onclick="delete_handler(this, '#progress_<%= group.cn -%>', '<%= _("Please wait") -%>');">
                    <%= link_to _("Delete"),
                        {:action => 'destroy', :id => group.cn},
                        {:data => {:confirm => _("Are you sure to delete group '%s'?") % group.cn}, :method => :destroy, :class => :button} %>
                  </span>
                <% end %>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
  <div><input type="hidden" id="all_users_string" value="<%= @all_users_string %>" /></div>
  <div><input type="hidden" id="system_users_string" value="<%= @all_sys_users_string %>" /></div>

  <div class="button_container">
    <div class="nav-buttons">
      <div class="hr">&nbsp;</div>
      <%= form_back_button -%>
    </div>
  </div>
</div>
